/***********************************
  ****  *     *   *   ****   ****
  ***   *      ***    ***    ***
  *     ****    *     ****   *  *
  
  * ${FILE_NAME}
  * ${CREATE_TIME}
  * Generated by flyer framework flyer_generator.py
  * Do not edit !!!
************************************/

#include "Flyer/common/log.h"
#include "Flyer/common/config.h"
#include "Flyer/net/tcp/net_addr.h"
#include "Flyer/net/tcp/tcp_server.h"
#include "Flyer/net/rpc/rpc_dispatcher.h"

#include <iostream>
#include <memory>
#include <google/protobuf/service.h>
#include <unistd.h>

int main(int argc, char* argv[]) {

    if(argc != 2) {
        printf("Start ${PROJECT_NAME} server error, argc is not 2 \n");
        printf("Start like this: \n");
        printf("./${PROJECT_NAME} /home/os/Desktop/project/config/flyer_server.xml \n");
        return 0;
    }


    Flyer::Config::SetGlobalConfig(argv[1]);
    
    Flyer::Logger::InitGlobalLogger();

    std::shared_ptr<${SERVICE_NAME}> service = std::make_shared<${SERVICE_NAME}>();
    Flyer::RpcDispatcher::GetRpcDispatcher()->registerService(service);

    Flyer::IPNetAddr::s_ptr addr = std::make_shared<Flyer::IPNetAddr>("127.0.0.1", Flyer::Config::GetGlobalConfig()->m_port);

    Flyer::TcpServer tcp_server(addr);

    tcp_server.start();
        
}